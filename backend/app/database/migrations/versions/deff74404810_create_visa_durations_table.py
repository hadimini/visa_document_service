"""Create visa_durations table

Revision ID: deff74404810
Revises: 8c8714de2aed
Create Date: 2025-09-02 11:28:34.534322

"""
from alembic import op
import sqlalchemy as sa

from app.database.custom_types import ChoiceType
from app.models.visa_durations import VisaDuration


# revision identifiers, used by Alembic
revision = 'deff74404810'
down_revision = '8c8714de2aed'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('visa_durations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('term', ChoiceType(choices=VisaDuration.TERM_CHOICES), nullable=False),
    sa.Column('entry', ChoiceType(choices=VisaDuration.ENTRY_CHOICES), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )

    # Create table object for bulk insert
    visa_durations_table = sa.table('visa_durations',
sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(), nullable=True),
        sa.Column('term', sa.String(), nullable=False),  # Use base type, not ChoiceType
        sa.Column('entry', sa.String(), nullable=False)  # Use base type, not ChoiceType
    )

    # Insert data
    term_map = dict(VisaDuration.TERM_CHOICES)
    entry_map = dict(VisaDuration.ENTRY_CHOICES)

    op.bulk_insert(
        visa_durations_table,
        [
            {
                "name": f"{term_map[VisaDuration.TERM_1]} {entry_map[VisaDuration.SINGLE_ENTRY]}",
                "term": VisaDuration.TERM_1,
                "entry": VisaDuration.SINGLE_ENTRY
            },
            {
                "name": f"{term_map[VisaDuration.TERM_1]} {entry_map[VisaDuration.DOUBLE_ENTRY]}",
                "term": VisaDuration.TERM_1,
                "entry": VisaDuration.DOUBLE_ENTRY
            },
            {
                "name": f"{term_map[VisaDuration.TERM_1]} {entry_map[VisaDuration.MULTIPLE_ENTRY]}",
                "term": VisaDuration.TERM_1,
                "entry": VisaDuration.MULTIPLE_ENTRY
            },
            {
                "name": f"{term_map[VisaDuration.TERM_3]} {entry_map[VisaDuration.SINGLE_ENTRY]}",
                "term": VisaDuration.TERM_3,
                "entry": VisaDuration.SINGLE_ENTRY
            },
            {
                "name": f"{term_map[VisaDuration.TERM_3]} {entry_map[VisaDuration.DOUBLE_ENTRY]}",
                "term": VisaDuration.TERM_3,
                "entry": VisaDuration.DOUBLE_ENTRY
            },
            {
                "name": f"{term_map[VisaDuration.TERM_3]} {entry_map[VisaDuration.MULTIPLE_ENTRY]}",
                "term": VisaDuration.TERM_3,
                "entry": VisaDuration.MULTIPLE_ENTRY
            },
            {
                "name": f"{term_map[VisaDuration.TERM_6]} {entry_map[VisaDuration.DOUBLE_ENTRY]}",
                "term": VisaDuration.TERM_6,
                "entry": VisaDuration.DOUBLE_ENTRY
            },
            {
                "name": f"{term_map[VisaDuration.TERM_6]} {entry_map[VisaDuration.MULTIPLE_ENTRY]}",
                "term": VisaDuration.TERM_6,
                "entry": VisaDuration.MULTIPLE_ENTRY
            },
            {
                "name": f"{term_map[VisaDuration.TERM_12]} {entry_map[VisaDuration.MULTIPLE_ENTRY]}",
                "term": VisaDuration.TERM_12,
                "entry": VisaDuration.MULTIPLE_ENTRY
            },
            {
                "name": f"{term_map[VisaDuration.TERM_24]} {entry_map[VisaDuration.MULTIPLE_ENTRY]}",
                "term": VisaDuration.TERM_24,
                "entry": VisaDuration.MULTIPLE_ENTRY
            },
            {
                "name": f"{term_map[VisaDuration.TERM_36]} {entry_map[VisaDuration.MULTIPLE_ENTRY]}",
                "term": VisaDuration.TERM_36,
                "entry": VisaDuration.MULTIPLE_ENTRY
            },
            {
                "name": f"{term_map[VisaDuration.TERM_48]} {entry_map[VisaDuration.MULTIPLE_ENTRY]}",
                "term": VisaDuration.TERM_48,
                "entry": VisaDuration.MULTIPLE_ENTRY
            },
            {
                "name": f"{term_map[VisaDuration.TERM_60]} {entry_map[VisaDuration.MULTIPLE_ENTRY]}",
                "term": VisaDuration.TERM_60,
                "entry": VisaDuration.MULTIPLE_ENTRY
            },
            {
                "name": f"{term_map[VisaDuration.TERM_120]} {entry_map[VisaDuration.MULTIPLE_ENTRY]}",
                "term": VisaDuration.TERM_120,
                "entry": VisaDuration.MULTIPLE_ENTRY
            },
        ]
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('visa_durations')
    # ### end Alembic commands ###
