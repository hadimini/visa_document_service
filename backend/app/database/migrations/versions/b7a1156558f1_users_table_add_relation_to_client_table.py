"""users table add relation to client table

Revision ID: b7a1156558f1
Revises: ffd31ec8eaa5
Create Date: 2025-08-21 14:37:55.744263

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm import Session

from app.models.clients import Client


# revision identifiers, used by Alembic
revision = 'b7a1156558f1'
down_revision = 'ffd31ec8eaa5'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('employee_client_id', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('manager_client_id', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('individual_client_id', sa.Integer(), nullable=True))
    op.create_foreign_key('users_employee_client_id_fkey', 'users', 'clients', ['employee_client_id'], ['id'])
    op.create_foreign_key('users_individual_client_id_fkey', 'users', 'clients', ['individual_client_id'], ['id'])
    op.create_foreign_key('users_manager_client_id_fkey', 'users', 'clients', ['manager_client_id'], ['id'])
    #
    bind = op.get_bind()
    session = Session(bind=bind)
    users_result = session.execute(sa.text("SELECT * FROM users"))
    users = users_result.fetchall()

    for user in users:
        client_name = f"{user.first_name} {user.last_name}"
        client_type = Client.TYPE_INDIVIDUAL
        client_tariff_id = 1  # TODO: fix that

        result = session.execute(
            sa.text("INSERT INTO clients (name, type, tariff_id) VALUES (:name, :type, :tariff_id) RETURNING id"),
            {
                "name": client_name,
                "type": client_type,
                "tariff_id": client_tariff_id,
            }
        )

        client_id = result.scalar()

        session.execute(
            sa.text("UPDATE users SET individual_client_id = :client_id WHERE id = :user_id"),
            {
                "client_id": client_id,
                "user_id": user.id,
            }
        )
        session.commit()


    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('users_employee_client_id_fkey', 'users', type_='foreignkey')
    op.drop_constraint('users_individual_client_id_fkey', 'users', type_='foreignkey')
    op.drop_constraint('users_manager_client_id_fkey', 'users', type_='foreignkey')
    op.drop_column('users', 'individual_client_id')
    op.drop_column('users', 'manager_client_id')
    op.drop_column('users', 'employee_client_id')
    # ### end Alembic commands ###
